package question_401_410

import (
	"reflect"
	"sort"
	"testing"
)

func Test_readBinaryWatch(t *testing.T) {
	tests := []struct {
		num  int
		want []string
	}{
		{1, []string{"1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"}},
		{2, []string{"0:03", "0:05", "0:06", "0:09", "0:10", "0:12", "0:17", "0:18", "0:20", "0:24", "0:33", "0:34", "0:36", "0:40", "0:48", "10:00", "1:01", "1:02", "1:04", "1:08", "1:16", "1:32", "2:01", "2:02", "2:04", "2:08", "2:16", "2:32", "3:00", "4:01", "4:02", "4:04", "4:08", "4:16", "4:32", "5:00", "6:00", "8:01", "8:02", "8:04", "8:08", "8:16", "8:32", "9:00"}},
		{11, []string{}},
		{10, []string{}},
		{9, []string{}},
		{8, []string{"11:31", "11:47", "11:55", "11:59", "7:31", "7:47", "7:55", "7:59"}},
		{7, []string{"10:31", "10:47", "10:55", "10:59", "11:15", "11:23", "11:27", "11:29", "11:30", "11:39", "11:43", "11:45", "11:46", "11:51", "11:53", "11:54", "11:57", "11:58", "3:31", "3:47", "3:55", "3:59", "5:31", "5:47", "5:55", "5:59", "6:31", "6:47", "6:55", "6:59", "7:15", "7:23", "7:27", "7:29", "7:30", "7:39", "7:43", "7:45", "7:46", "7:51", "7:53", "7:54", "7:57", "7:58", "9:31", "9:47", "9:55", "9:59"}},
	}
	for _, tt := range tests {
		t.Run("test", func(t *testing.T) {
			got := readBinaryWatch(tt.num)
			sort.Strings(got)
			sort.Strings(tt.want)
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("readBinaryWatch() = %#v, want %v", got, tt.want)
			}
		})
	}
}
